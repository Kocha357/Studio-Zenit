---
interface Props {
	imgUrl: string;
	imgAlt: string;
	width: string;
	height: string;
}
const { imgUrl, imgAlt, width, height } = Astro.props;
---

<div class="photo-wrapper">
	<img src={imgUrl} alt={imgAlt} width={width} height={height} class="fs-img" />
</div>
<div id="fullscreen-modal" class="modal">
	<span class="close" id="close">&times;</span>
	<img class="modal-content" id="modal-image">
	<button class="prev" id="prev">&#10094;</button>
	<button class="next" id="next">&#10095;</button>
  </div>
<style>
	 .modal {
        display: none;
	  justify-content: center;
	  align-items: center;
        position: fixed;
        z-index: 99999;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: hidden;
        background-color: rgb(0, 0, 0);
	  padding: 30px;
	  
    }
    .photo-wrapper{
        height: 100%;
    }
    @media screen and (min-width:1280px){
        .fs-img:hover{
          transform: scale(1.02);
        }
    }
    .modal-content {	
        width: 100%;
        height: 100%;
	  max-width: 1280px;
        object-fit: contain;
    }

    .close {
        position: absolute;
        top: 15px;
        right: 15px;
        font-size: 50px;
        color: #fff;
        cursor: pointer;
    }

    .prev,
    .next {
        position: absolute;
        top: 48%;
        font-size: 20px;
        color: #fff;
        background-color: rgba(0, 0, 0, 0.5);
        border: none;
        cursor: pointer;
        transition: background-color 0.3s;
	  padding: 5px;
	  height: 60px;
	  outline: none;
	  background-color:  #d9ad5e;
    }
  
   
    .prev{
	left: 15px;
	border-top-right-radius: 8px;
	border-bottom-right-radius: 8px;
    }
    .next {
        right: 15px;
	  border-top-left-radius: 8px;
	  border-bottom-left-radius: 8px;
    }
    @media screen and (max-width: 1280px){
	.prev{
		left: 0;
		
	}
	.next{
		right: 0;
	}
    }
    .fs-img{
        object-fit: cover;
         height: 100%;
         cursor: pointer;

    }
	
</style>
<script>
    const fsImage:any = document.getElementsByClassName("fs-img");
    const modal:any = document.getElementById("fullscreen-modal");
    const modalImage:any = document.getElementById("modal-image");
    const close:any = document.getElementsByClassName('close');
    let currentImageIndex:number = 0;
    for (let i = 0; i < fsImage.length; i++) {
        fsImage[i].addEventListener("click", ((index) => () => openFullscreenModal(index))(i));
    }
  
    for (let i = 0; i< close.length; i++){
	close[i].addEventListener('click', closeFullscreenModal)
    }
    function openFullscreenModal(index:number) {
        currentImageIndex = index;
        modal.style.display = "flex";
        modalImage.src = fsImage[index].src;
	  document.body.classList.add('disable-scroll')
    }

   function closeFullscreenModal(){
	modal.style.display = 'none'
	document.body.classList.remove('disable-scroll')

   }
    
    function changeImage(direction:any) {
        currentImageIndex += direction;

        if (currentImageIndex < 0) {
            currentImageIndex = fsImage.length - 1;
        } else if (currentImageIndex >= fsImage.length) {
            currentImageIndex = 0;
        }

        modalImage.src = fsImage[currentImageIndex].src;
    }
    const next:any = document.getElementById('next');
    const prev:any = document.getElementById('prev');
    
    next.addEventListener('click',()=>{
	changeImage(1);
    });
    prev.addEventListener('click',()=>{
	changeImage(-1)
    })

    document.addEventListener("keydown", (event) => {
        if (event.key === "ArrowLeft") {
            changeImage( -1);
        } else if (event.key === "ArrowRight") {
            changeImage( 1);
        }
    });
</script>
